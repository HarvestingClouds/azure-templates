{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vnetName": {
      "type": "string",
      "defaultValue": "WTestVNet",
      "metadata": {
        "description": "Name for the new VNet."
      }
    },
    "vnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/16",
      "metadata": {
        "description": "CIDR prefix for the VNet address space."
      }
    },
    "frontEndSubnetName": {
      "type": "string",
      "defaultValue": "FrontEnd",
      "metadata": {
        "description": "Name for the front end subnet."
      }
    },
    "frontEndSubnetPrefix": {
      "type": "string",
      "defaultValue": "192.168.1.0/24",
      "metadata": {
        "description": "CIDR address prefix for the front end subnet."
      }
    },
    "stdStorageName": {
      "type": "string",
      "defaultValue": "wtestvnetstoragestd",
      "metadata": {
        "description": "Name for standard storage account."
      }
    },
    "stdStorageType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS"
      ],
      "metadata": {
        "description": "Storage type."
      }
    },
    "osType": {
      "type": "int",
      "defaultValue": 0,
      "allowedValues": [
        0,
        1
      ],
      "metadata": {
        "description": "Type of OS to use for VMs: 0 - Windows; 1 - Ubuntu."
      }
    }
  },
  "variables": {
    "webVMSettings": [
      {
        "vmSize": "Standard_A1",
        "adminUsername": "adminuser",
        "adminPassword": "adminP@ssw0rd",
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2012-R2-Datacenter",
        "version": "latest",
        "vmName": "WEB1",
        "osdisk": "osdiskweb",
        "nicName": "NICWEB1",
        "pipName": "PIPWEB1",
        "ipAddress": "192.168.1.101"
      },
      {
        "vmSize": "Standard_A1",
        "adminUsername": "adminuser",
        "adminPassword": "adminP@ssw0rd",
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "14.04.2-LTS",
        "version": "latest",
        "vmName": "WEB1",
        "osdisk": "osdiskweb",
        "nicName": "NICWEB1",
        "pipName": "PIPWEB1",
        "ipAddress": "192.168.1.101"
      }
    ],
    "extensionSettings": [
      {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "1.9",
        "fileUris": null,
        "commandToExecute": null,
        "ModulesUrl": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-iis-server-windows-vm/ContosoWebsite.ps1.zip",
        "SasToken": null,
        "ConfigurationFunction": "ContosoWebsite.ps1\\ContosoWebsite",
        "MachineName": "[variables('webVMSetting').vmName]"
      },
      {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "fileUris": [ "https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/apache2-on-ubuntu-vm/install_apache.sh" ],
        "commandToExecute": "sh install_apache.sh",
        "ModulesUrl": null,
        "SasToken": "",
        "ConfigurationFunction": null,
        "MachineName": null
      }
    ],
    "location": "[resourceGroup().location]",
    "vmStorageAccountContainerName": "vhds",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "frontEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('frontEndSubnetName'))]",
    "webVMSetting": "[variables('webVMSettings')[parameters('osType')]]",
    "extensionProperties": "[variables('extensionSettings')[parameters('osType')]]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('stdStorageName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Storage Account - Simple"
      },
      "properties": {
        "accountType": "[parameters('stdStorageType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "VNet"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('frontEndSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('frontEndSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('webVMSetting').pipName]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      },
      "tags": {
        "displayName": "PublicIPAddress - Web"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('webVMSetting').nicName]",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "NetworkInterface - Web"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('webVMSetting').pipName)]",
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('webVMSetting').ipAddress]",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('webVMSetting').pipName)]"
              },
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('webVMSetting').vmName]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('webVMSetting').nicName)]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('stdStorageName'))]"
      ],
      "tags": {
        "displayName": "VM - Web"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('webVMSetting').vmSize]"
        },
        "osProfile": {
          "computerName": "[variables('webVMSetting').vmName]",
          "adminUsername": "[variables('webVMSetting').adminUsername]",
          "adminPassword": "[variables('webVMSetting').adminPassword]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('webVMSetting').publisher]",
            "offer": "[variables('webVMSetting').offer]",
            "sku": "[variables('webVMSetting').sku]",
            "version": "[variables('webVMSetting').version]"
          },
          "osDisk": {
            "name": "[variables('webVMSetting').osdisk]",
            "vhd": {
              "uri": "[concat('http://', parameters('stdStorageName'), '.blob.core.windows.net/', variables('vmStorageAccountContainerName'), '/', variables('webVMSetting').osdisk,'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('webVMSetting').nicName)]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-01-01", 
      "type": "Microsoft.Resources/deployments",
      "name": "webserver",  
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('webVMSetting').vmName)]"
      ],           
      "properties": { 
        "mode": "Incremental", 
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/telmosampaio/azure-templates/master/IaaSStory/IaaSStory/Templates/04-Custom%20extension/iisaspnet.json",
          "contentVersion": "1.0.0.0"
        }, 
        "parameters": { 
          "vmName":{"value": "[variables('webVMSetting').vmName]"} 
        } 
      } 
    } 
  ]
}